name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [20]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run linting
        run: npm run lint || echo "Linting not configured"

      - name: Run tests
        run: npm test

      - name: Build project
        run: npm run build

      - name: Test CLI functionality
        run: |
          # Test basic CLI help
          node dist/exif-ai.js --help || echo "CLI help test"
          
          # Test API imports
          node -e "
            import('./dist/api.js').then(api => {
              console.log('API import successful');
              console.log('Available exports:', Object.keys(api));
            }).catch(err => {
              console.error('API import failed:', err);
              process.exit(1);
            });
          "

  docker-test:
    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: false
          tags: exif-ai:test
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Test Docker image
        run: |
          # Start container in background
          docker run -d --name exif-ai-test -p 3000:3000 \
            -e EXIF_AI_PROVIDER=test \
            exif-ai:test

          # Wait for container to start
          sleep 15

          # Test health endpoint
          curl -f http://localhost:3000/health

          # Test with sample request (using test provider)
          echo "Testing API endpoint..."
          curl -X POST http://localhost:3000/process \
            -F "image=@src/__tests__/image/VCG211476897295.jpeg" \
            -F "provider=test" || echo "Test completed"

          # Clean up
          docker stop exif-ai-test
          docker rm exif-ai-test

  security:
    runs-on: ubuntu-latest
    needs: test
    permissions:
      security-events: write
      contents: read

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run npm audit
        run: |
          npm audit --audit-level=high || echo "Audit completed with warnings"

      - name: Run CodeQL Analysis
        uses: github/codeql-action/init@v3
        with:
          languages: javascript

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3
